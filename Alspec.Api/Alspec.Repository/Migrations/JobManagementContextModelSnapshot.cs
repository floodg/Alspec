// <auto-generated />
using Alspec.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alspec.Repository.Migrations
{
    [DbContext(typeof(JobManagementContext))]
    partial class JobManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alspec.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Alspec",
                            Title = "Job 1"
                        });
                });

            modelBuilder.Entity("Alspec.Models.SubItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("JobId");

                    b.ToTable("SubItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Description = "Sub-item description",
                            JobId = 1,
                            Status = "Pending",
                            Title = "Sub-item 1"
                        },
                        new
                        {
                            ItemId = 2,
                            Description = "Another sub-item",
                            JobId = 1,
                            Status = "In Progress",
                            Title = "Sub-item 2"
                        });
                });

            modelBuilder.Entity("Alspec.Models.SubItem", b =>
                {
                    b.HasOne("Alspec.Models.Job", null)
                        .WithMany("SubItems")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alspec.Models.Job", b =>
                {
                    b.Navigation("SubItems");
                });
#pragma warning restore 612, 618
        }
    }
}
